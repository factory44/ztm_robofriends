{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports,\n/**\n* @template {string | import('postcss-selector-parser').Root} T\n*\n* Prefix all classes in the selector with the given prefix\n*\n* It can take either a string or a selector AST and will return the same type\n*\n* @param {string} prefix\n* @param {T} selector\n* @param {boolean} prependNegative\n* @returns {T}\n*/\n\"default\", {\n  enumerable: true,\n  get: () => _default\n});\nconst _postcssSelectorParser = /*#__PURE__*/_interopRequireDefault(require(\"postcss-selector-parser\"));\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction _default(prefix, selector) {\n  let prependNegative = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  if (prefix === \"\") {\n    return selector;\n  }\n  let ast = typeof selector === \"string\" ? (0, _postcssSelectorParser.default)().astSync(selector) : selector;\n  ast.walkClasses(classSelector => {\n    let baseClass = classSelector.value;\n    let shouldPlaceNegativeBeforePrefix = prependNegative && baseClass.startsWith(\"-\");\n    classSelector.value = shouldPlaceNegativeBeforePrefix ? `-${prefix}${baseClass.slice(1)}` : `${prefix}${baseClass}`;\n  });\n  return typeof selector === \"string\" ? ast.toString() : ast;\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","enumerable","get","_default","_postcssSelectorParser","_interopRequireDefault","require","obj","__esModule","default","prefix","selector","prependNegative","arguments","length","undefined","ast","astSync","walkClasses","classSelector","baseClass","shouldPlaceNegativeBeforePrefix","startsWith","slice","toString"],"sources":["/Users/grzegorzlis/Visual_Projects/ztm_web_dev/folder17/robofriends/node_modules/tailwindcss/lib/util/prefixSelector.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, /**\n * @template {string | import('postcss-selector-parser').Root} T\n *\n * Prefix all classes in the selector with the given prefix\n *\n * It can take either a string or a selector AST and will return the same type\n *\n * @param {string} prefix\n * @param {T} selector\n * @param {boolean} prependNegative\n * @returns {T}\n */ \"default\", {\n    enumerable: true,\n    get: ()=>_default\n});\nconst _postcssSelectorParser = /*#__PURE__*/ _interopRequireDefault(require(\"postcss-selector-parser\"));\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nfunction _default(prefix, selector, prependNegative = false) {\n    if (prefix === \"\") {\n        return selector;\n    }\n    let ast = typeof selector === \"string\" ? (0, _postcssSelectorParser.default)().astSync(selector) : selector;\n    ast.walkClasses((classSelector)=>{\n        let baseClass = classSelector.value;\n        let shouldPlaceNegativeBeforePrefix = prependNegative && baseClass.startsWith(\"-\");\n        classSelector.value = shouldPlaceNegativeBeforePrefix ? `-${prefix}${baseClass.slice(1)}` : `${prefix}${baseClass}`;\n    });\n    return typeof selector === \"string\" ? ast.toString() : ast;\n}\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EACzCC,KAAK,EAAE;AACX,CAAC,CAAC;AACFH,MAAM,CAACC,cAAc,CAACC,OAAO;AAAE;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAI,SAAS,EAAE;EACXE,UAAU,EAAE,IAAI;EAChBC,GAAG,EAAEA,CAAA,KAAIC;AACb,CAAC,CAAC;AACF,MAAMC,sBAAsB,GAAG,aAAcC,sBAAsB,CAACC,OAAO,CAAC,yBAAyB,CAAC,CAAC;AACvG,SAASD,sBAAsBA,CAACE,GAAG,EAAE;EACjC,OAAOA,GAAG,IAAIA,GAAG,CAACC,UAAU,GAAGD,GAAG,GAAG;IACjCE,OAAO,EAAEF;EACb,CAAC;AACL;AACA,SAASJ,QAAQA,CAACO,MAAM,EAAEC,QAAQ,EAA2B;EAAA,IAAzBC,eAAe,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,KAAK;EACvD,IAAIH,MAAM,KAAK,EAAE,EAAE;IACf,OAAOC,QAAQ;EACnB;EACA,IAAIK,GAAG,GAAG,OAAOL,QAAQ,KAAK,QAAQ,GAAG,CAAC,CAAC,EAAEP,sBAAsB,CAACK,OAAO,GAAG,CAACQ,OAAO,CAACN,QAAQ,CAAC,GAAGA,QAAQ;EAC3GK,GAAG,CAACE,WAAW,CAAEC,aAAa,IAAG;IAC7B,IAAIC,SAAS,GAAGD,aAAa,CAACnB,KAAK;IACnC,IAAIqB,+BAA+B,GAAGT,eAAe,IAAIQ,SAAS,CAACE,UAAU,CAAC,GAAG,CAAC;IAClFH,aAAa,CAACnB,KAAK,GAAGqB,+BAA+B,GAAI,IAAGX,MAAO,GAAEU,SAAS,CAACG,KAAK,CAAC,CAAC,CAAE,EAAC,GAAI,GAAEb,MAAO,GAAEU,SAAU,EAAC;EACvH,CAAC,CAAC;EACF,OAAO,OAAOT,QAAQ,KAAK,QAAQ,GAAGK,GAAG,CAACQ,QAAQ,EAAE,GAAGR,GAAG;AAC9D"},"metadata":{},"sourceType":"script","externalDependencies":[]}