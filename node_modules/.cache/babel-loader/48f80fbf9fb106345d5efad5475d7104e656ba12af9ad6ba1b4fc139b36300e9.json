{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst _setupTrackingContext = /*#__PURE__*/_interopRequireDefault(require(\"./lib/setupTrackingContext\"));\nconst _processTailwindFeatures = /*#__PURE__*/_interopRequireDefault(require(\"./processTailwindFeatures\"));\nconst _sharedState = require(\"./lib/sharedState\");\nconst _findAtConfigPath = require(\"./lib/findAtConfigPath\");\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nmodule.exports = function tailwindcss(configOrPath) {\n  return {\n    postcssPlugin: \"tailwindcss\",\n    plugins: [_sharedState.env.DEBUG && function (root) {\n      console.log(\"\\n\");\n      console.time(\"JIT TOTAL\");\n      return root;\n    }, function (root, result) {\n      var _findAtConfigPath1;\n      // Use the path for the `@config` directive if it exists, otherwise use the\n      // path for the file being processed\n      configOrPath = (_findAtConfigPath1 = (0, _findAtConfigPath.findAtConfigPath)(root, result)) !== null && _findAtConfigPath1 !== void 0 ? _findAtConfigPath1 : configOrPath;\n      let context = (0, _setupTrackingContext.default)(configOrPath);\n      if (root.type === \"document\") {\n        let roots = root.nodes.filter(node => node.type === \"root\");\n        for (const root1 of roots) {\n          if (root1.type === \"root\") {\n            (0, _processTailwindFeatures.default)(context)(root1, result);\n          }\n        }\n        return;\n      }\n      (0, _processTailwindFeatures.default)(context)(root, result);\n    }, _sharedState.env.OXIDE && function lightningCssPlugin(_root, result) {\n      let postcss = require(\"postcss\");\n      let lightningcss = require(\"lightningcss\");\n      let browserslist = require(\"browserslist\");\n      try {\n        let transformed = lightningcss.transform({\n          filename: result.opts.from,\n          code: Buffer.from(result.root.toString()),\n          minify: false,\n          sourceMap: !!result.map,\n          inputSourceMap: result.map ? result.map.toString() : undefined,\n          targets: typeof process !== \"undefined\" && process.env.JEST_WORKER_ID ? {\n            chrome: 106 << 16\n          } : lightningcss.browserslistToTargets(browserslist(require(\"../package.json\").browserslist)),\n          drafts: {\n            nesting: true,\n            customMedia: true\n          }\n        });\n        var _result_map;\n        result.map = Object.assign((_result_map = result.map) !== null && _result_map !== void 0 ? _result_map : {}, {\n          toJSON() {\n            return transformed.map.toJSON();\n          },\n          toString() {\n            return transformed.map.toString();\n          }\n        });\n        result.root = postcss.parse(transformed.code.toString(\"utf8\"));\n      } catch (err) {\n        if (typeof process !== \"undefined\" && process.env.JEST_WORKER_ID) {\n          let lines = err.source.split(\"\\n\");\n          err = new Error([\"Error formatting using Lightning CSS:\", \"\", ...[\"```css\", ...lines.slice(Math.max(err.loc.line - 3, 0), err.loc.line), \" \".repeat(err.loc.column - 1) + \"^-- \" + err.toString(), ...lines.slice(err.loc.line, err.loc.line + 2), \"```\"]].join(\"\\n\"));\n        }\n        if (Error.captureStackTrace) {\n          Error.captureStackTrace(err, lightningCssPlugin);\n        }\n        throw err;\n      }\n    }, _sharedState.env.DEBUG && function (root) {\n      console.timeEnd(\"JIT TOTAL\");\n      console.log(\"\\n\");\n      return root;\n    }].filter(Boolean)\n  };\n};\nmodule.exports.postcss = true;","map":{"version":3,"names":["Object","defineProperty","exports","value","_setupTrackingContext","_interopRequireDefault","require","_processTailwindFeatures","_sharedState","_findAtConfigPath","obj","__esModule","default","module","tailwindcss","configOrPath","postcssPlugin","plugins","env","DEBUG","root","console","log","time","result","_findAtConfigPath1","findAtConfigPath","context","type","roots","nodes","filter","node","root1","OXIDE","lightningCssPlugin","_root","postcss","lightningcss","browserslist","transformed","transform","filename","opts","from","code","Buffer","toString","minify","sourceMap","map","inputSourceMap","undefined","targets","process","JEST_WORKER_ID","chrome","browserslistToTargets","drafts","nesting","customMedia","_result_map","assign","toJSON","parse","err","lines","source","split","Error","slice","Math","max","loc","line","repeat","column","join","captureStackTrace","timeEnd","Boolean"],"sources":["/Users/grzegorzlis/Visual_Projects/ztm_web_dev/folder17/robofriends/node_modules/tailwindcss/lib/plugin.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nconst _setupTrackingContext = /*#__PURE__*/ _interopRequireDefault(require(\"./lib/setupTrackingContext\"));\nconst _processTailwindFeatures = /*#__PURE__*/ _interopRequireDefault(require(\"./processTailwindFeatures\"));\nconst _sharedState = require(\"./lib/sharedState\");\nconst _findAtConfigPath = require(\"./lib/findAtConfigPath\");\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nmodule.exports = function tailwindcss(configOrPath) {\n    return {\n        postcssPlugin: \"tailwindcss\",\n        plugins: [\n            _sharedState.env.DEBUG && function(root) {\n                console.log(\"\\n\");\n                console.time(\"JIT TOTAL\");\n                return root;\n            },\n            function(root, result) {\n                var _findAtConfigPath1;\n                // Use the path for the `@config` directive if it exists, otherwise use the\n                // path for the file being processed\n                configOrPath = (_findAtConfigPath1 = (0, _findAtConfigPath.findAtConfigPath)(root, result)) !== null && _findAtConfigPath1 !== void 0 ? _findAtConfigPath1 : configOrPath;\n                let context = (0, _setupTrackingContext.default)(configOrPath);\n                if (root.type === \"document\") {\n                    let roots = root.nodes.filter((node)=>node.type === \"root\");\n                    for (const root1 of roots){\n                        if (root1.type === \"root\") {\n                            (0, _processTailwindFeatures.default)(context)(root1, result);\n                        }\n                    }\n                    return;\n                }\n                (0, _processTailwindFeatures.default)(context)(root, result);\n            },\n            _sharedState.env.OXIDE && function lightningCssPlugin(_root, result) {\n                let postcss = require(\"postcss\");\n                let lightningcss = require(\"lightningcss\");\n                let browserslist = require(\"browserslist\");\n                try {\n                    let transformed = lightningcss.transform({\n                        filename: result.opts.from,\n                        code: Buffer.from(result.root.toString()),\n                        minify: false,\n                        sourceMap: !!result.map,\n                        inputSourceMap: result.map ? result.map.toString() : undefined,\n                        targets: typeof process !== \"undefined\" && process.env.JEST_WORKER_ID ? {\n                            chrome: 106 << 16\n                        } : lightningcss.browserslistToTargets(browserslist(require(\"../package.json\").browserslist)),\n                        drafts: {\n                            nesting: true,\n                            customMedia: true\n                        }\n                    });\n                    var _result_map;\n                    result.map = Object.assign((_result_map = result.map) !== null && _result_map !== void 0 ? _result_map : {}, {\n                        toJSON () {\n                            return transformed.map.toJSON();\n                        },\n                        toString () {\n                            return transformed.map.toString();\n                        }\n                    });\n                    result.root = postcss.parse(transformed.code.toString(\"utf8\"));\n                } catch (err) {\n                    if (typeof process !== \"undefined\" && process.env.JEST_WORKER_ID) {\n                        let lines = err.source.split(\"\\n\");\n                        err = new Error([\n                            \"Error formatting using Lightning CSS:\",\n                            \"\",\n                            ...[\n                                \"```css\",\n                                ...lines.slice(Math.max(err.loc.line - 3, 0), err.loc.line),\n                                \" \".repeat(err.loc.column - 1) + \"^-- \" + err.toString(),\n                                ...lines.slice(err.loc.line, err.loc.line + 2),\n                                \"```\"\n                            ]\n                        ].join(\"\\n\"));\n                    }\n                    if (Error.captureStackTrace) {\n                        Error.captureStackTrace(err, lightningCssPlugin);\n                    }\n                    throw err;\n                }\n            },\n            _sharedState.env.DEBUG && function(root) {\n                console.timeEnd(\"JIT TOTAL\");\n                console.log(\"\\n\");\n                return root;\n            }\n        ].filter(Boolean)\n    };\n};\nmodule.exports.postcss = true;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}